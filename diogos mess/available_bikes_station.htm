<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bikes Over Time</title>
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <style>
        .tooltip {
            position: absolute;
            background-color: lightblue;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            pointer-events: none;
        }
    </style>
</head>

<body>

    <div id="chart-container"></div>

    <div>
        <label for="station-select">Select Station:</label>
        <select id="station-select"></select>
    </div>

    <script>
        d3.csv("status_small.csv").then(function (data) {
            const dateParser = d3.utcParse("%Y-%-m-%-d");

            const stations = Array.from(new Set(data.map(d => d.station_id)));

            const select = d3.select("#station-select");
            select
                .selectAll("option")
                .data(stations)
                .enter()
                .append("option")
                .text(d => d);

            const selectedStation = select.property("value");

            updateChart(selectedStation);

            select.on("change", function () {
                const selectedStation = d3.select(this).property("value");
                updateChart(selectedStation);
            });

            function updateChart(station) {
                let processedData = data
                    .filter(d => d.station_id === station)
                    .map(d => ({
                        date: dateParser(d["date"]),
                        bikes: Math.round(d["bikes_available_avg"]),
                        station: d["station_id"]
                    }));

                const margin = { top: 50, right: 20, bottom: 50, left: 50 };
                const width = 900 - margin.left - margin.right;
                const height = 400 - margin.top - margin.bottom;

                d3.select("#chart-container").selectAll("*").remove();

                const svg = d3.select("#chart-container")
                    .append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                const tooltip = d3.select("body")
                    .append("div")
                    .attr("class", "tooltip")
                    .style("opacity", 0);

                const xScale = d3.scaleTime()
                    .domain(d3.extent(processedData, d => d.date))
                    .range([0, width]);

                const yScale = d3.scaleLinear()
                    .domain([0, d3.max(processedData, d => d.bikes)])
                    .range([height, 0]);

                const line = d3.line()
                    .x(d => xScale(d.date))
                    .y(d => yScale(d.bikes));
                console.log(line)

                svg.append("path")
                    .datum(processedData)
                    .attr("fill", "none")
                    .attr("stroke", "steelblue")
                    .attr("stroke-width", 1.5)
                    .attr("d", line);

                    console.log(processedData)
                    
                // Add tooltip functionality 
                svg.selectAll("rect")
                    .data(processedData)
                    .enter().append("rect")
                    .attr("x", d => xScale(d.date) - 5)
                    .attr("y", d => yScale(d.bikes) - 5)
                    .attr("width", 10)
                    .attr("height", 10)
                    .attr("fill", "transparent")
                    .on("mouseover", function (event, d) {
                        tooltip.transition()
                            .duration(200)
                            .style("opacity", 0.9);
                        tooltip.html(`Date: ${d.date.toLocaleDateString()}<br>Bikes Available: ${d.bikes}`)
                            .style("left", (event.pageX + 5) + "px")
                            .style("top", (event.pageY - 28) + "px");
                    })
                    .on("mouseout", function () {
                        tooltip.transition()
                            .duration(500)
                            .style("opacity", 0);
                    });

                svg.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(xScale))
                    .append("text")
                    .attr("x", width / 2)
                    .attr("y", 30)
                    .attr("dy", "1em")
                    .style("text-anchor", "middle")
                    .text("Date");

                svg.append("g")
                    .call(d3.axisLeft(yScale))
                    .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", -margin.left)
                    .attr("x", -height / 2)
                    .attr("dy", "-2em")
                    .style("text-anchor", "middle")
                    .text("Bikes Available");

                svg.append("line")
                    .attr("x1", 0)
                    .attr("y1", yScale(d3.max(processedData, d => d.bikes)))
                    .attr("x2", width)
                    .attr("y2", yScale(d3.max(processedData, d => d.bikes)))
                    .attr("stroke", "red")
                    .attr("stroke-width", 1.5)
                    .attr("stroke-dasharray", "4");

                svg.append("text")
                    .attr("x", width / 2)
                    .attr("y", 0 - (margin.top / 2))
                    .attr("text-anchor", "middle")
                    .style("font-size", "20px")
                    .style("text-decoration", "underline")
                    .text("Bike availability");

                svg.append("text")
                    .attr("transform", "translate(" + (width / 2) + " ," + (height + 30) + ")")
                    .style("text-anchor", "middle")
                    .text("Time");

                svg.append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 0 - margin.left)
                    .attr("x", 0 - (height / 2))
                    .attr("dy", "1em")
                    .style("text-anchor", "middle")
                    .text("Bikes available");
            }
        });
    </script>

</body>

</html>
